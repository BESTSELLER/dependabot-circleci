version: 2.1

orbs:
  cci-common: 'bestsellerit/cci-common@1.4.8'
  secret-injector: bestsellerit/secret-injector@1.7.6

jobs: 
  deploy-serverless:
    executor: cci-common/ci_image
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - cci-common/vault_login
      - secret-injector/use-secrets
      - run:
          name: install jq
          command: |
            apk add --no-cache jq
      - run:
          name: gcloud login
          command: |
            gcloud components install beta --quiet
            echo 'export CLOUDSDK_AUTH_ACCESS_TOKEN=$(cat /tmp/cloudrun_admin | jq -r .token | sed 's/\.*$//' | tr -d "\n")' >> $BASH_ENV

      - run:
          name: creating deployment
          command: |
            source ${BASH_ENV}
            gcloud beta run deploy $CIRCLE_PROJECT_REPONAME \
              --image=$K8S_CLUSTER_artifact_registry_url/$K8S_CLUSTER_artifact_registry_project/$SHORT-docker/"$CIRCLE_PROJECT_REPONAME":"$CIRCLE_TAG" \
              --allow-unauthenticated \
              --min-instances=0 \
              --max-instances=100 \
              --port=3000 \
              --platform=managed \
              --region=europe-west4 \
              --project=es-standalone-cb21 \
              --timeout=60m \
              --labels service=dependabot-circleci \
              --set-env-vars VAULT_ADDR="${VAULT_ADDR}",VAULT_ROLE=dependabot-circleci,VAULT_SECRET=ES/data/dependabot-circleci/prod,DEPENDABOT_VERSION=${CIRCLE_TAG},DEPENDABOT_CONFIG=/secrets/secrets \
              --service-account=dependabot-circleci@es-standalone-cb21.iam.gserviceaccount.com
      - run:
          name: create domain mapping
          command: |
            if ! gcloud beta run domain-mappings describe \
                --domain=$CIRCLE_PROJECT_REPONAME.bestsellerit.com \
                --platform=managed \
                --region=europe-west4 \ 
                --project=es-standalone-cb21; then
              gcloud beta run domain-mappings create \
                --service=$CIRCLE_PROJECT_REPONAME \
                --domain=$CIRCLE_PROJECT_REPONAME.bestsellerit.com \
                --platform=managed \
                --region=europe-west4 \
                --project=es-standalone-cb21
            fi
      - run:
          name: create scheduled job
          command: |
            bearer=$(cat /tmp/secrets.json | jq -r .http.token )
            gcloud beta scheduler jobs update http $CIRCLE_PROJECT_REPONAME --schedule "00 23 * * *" \
              --http-method=POST \
              --uri=https://$CIRCLE_PROJECT_REPONAME.bestsellerit.com/start \
              --update-headers "Authorization"="Bearer $bearer" \
              --time-zone="Europe/Copenhagen" \
              --project=es-standalone-cb21

deploy_filter: &deploy_filter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /[0-9]+.[0-9]+.[0-9]+/

no_deploy_filter: &no_deploy_filter
  filters:
    tags:
      ignore: /[0-9]+.[0-9]+.[0-9]+/

prod_context: &prod_context
  context:
    - es02-prod
    - shared

workflows:
  test:
    jobs:
      - secret-injector/dump-secrets:
          <<: *prod_context
          <<: *no_deploy_filter
      - cci-common/go_test_unit:
          name: go test
          <<: *prod_context
          <<: *no_deploy_filter
      - cci-common/go_test_sonar:
          name: SonarCloud
          <<: *prod_context
          <<: *no_deploy_filter
          requires:
            - secret-injector/dump-secrets
      - cci-common/build_n_push_docker:
          dry_run: true
          requires:
            - secret-injector/dump-secrets
          <<: *prod_context
          <<: *no_deploy_filter

  serverless-test-build-deploy:
    jobs:
      - secret-injector/dump-secrets:
          <<: *prod_context
          <<: *deploy_filter
      - secret-injector/dump-secrets:
          name: secret-injector/cloudrun
          vault-path: "gcp_cloudrun/roleset/cloudrun/token"
          output-filename: cloudrun_admin
          format: json
          <<: *prod_context
          <<: *deploy_filter
      - cci-common/build_n_push_docker:
          tag: "$CIRCLE_TAG"
          requires:
            - secret-injector/cloudrun
            - secret-injector/dump-secrets
          <<: *prod_context
          <<: *deploy_filter
      - secret-injector/dump-secrets:
          name: secret-injector/project
          vault-path: ES/data/dependabot-circleci/prod
          format: json
          output-filename: secrets.json
          requires:
            - cci-common/build_n_push_docker
          <<: *prod_context
          <<: *deploy_filter
      - deploy-serverless:
          requires:
            - secret-injector/project
          <<: *prod_context
          <<: *deploy_filter
