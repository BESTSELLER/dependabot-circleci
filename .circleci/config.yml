version: 2.1
executors:
  go_image:
    docker:
      - image: cimg/go:1.15
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS

orbs:
  secret-injector: bestsellerit/secret-injector@1.2.0

jobs:
  test:
    executor: go_image
    steps:
      - checkout
      - run:
          name: go get
          command: |
            go get ./...
      - run:
          name: install gotestsum
          command: go get -u gotest.tools/gotestsum
      - run:
          name: go test
          command: |
            mkdir junit
            gotestsum --junitfile junit/unit-tests.xml
      - store_test_results:
          path: ~/project/junit
      - run:
          name: go build
          command: |
            GOOS=linux \
            GOARCH=amd64 \
            go build -ldflags="-w -s"
  test-sonar:
    executor: go_image
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - run:
          name: Install Sonarqube scanner
          command: |
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip -P /tmp/
            cd /tmp/
            unzip sonar-scanner-cli-4.4.0.2170-linux.zip
      - run:
          name: go get
          command: |
            go get ./...
      - run:
          name: go test - sonar
          command: |
            go test ./... -coverprofile=coverage.out
      - run:
          name: Run SonarCloud Scanner
          command: |
            source /tmp/secrets
            export SONAR_SCANNER_OPTS="-Xmx2048m"
            eval /tmp/sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner \
              -Dsonar.projectKey=$K8S_CLUSTER_SONAR_KEY_GH"_"$CIRCLE_PROJECT_REPONAME \
              -Dsonar.projectName=$CIRCLE_PROJECT_REPONAME \
              -Dsonar.organization=$K8S_CLUSTER_SONAR_ORG_GH \
              -Dsonar.sources=. \
              -Dsonar.test.inclusions=**/**_test.go \
              -Dsonar.sources.inclusions=**/**.go \
              -Dsonar.host.url=$K8S_CLUSTER_SONAR_HOST \
              -Dsonar.login=$K8S_CLUSTER_SONAR_LOGIN_GH \
              -Dsonar.links.scm=$CIRCLE_REPOSITORY_URL \
              -Dsonar.go.coverage.reportPaths=coverage.out

  docker-build-n-push:
    docker:
      - image: docker:stable-git
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    steps:
      - attach_workspace:
          at: /tmp
      - checkout
      - setup_remote_docker
      - run:
          name: Push and build image
          command: |
            source /tmp/secrets
            docker login -u $DOCKER_username -p $DOCKER_password $K8S_CLUSTER_docker_registry_url
            docker build \
              -t $K8S_CLUSTER_docker_registry_url/$SHORT/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG \
              -t $K8S_CLUSTER_docker_registry_url/$SHORT/$CIRCLE_PROJECT_REPONAME:latest \
              --build-arg VERSION=$CIRCLE_TAG .
            docker push $K8S_CLUSTER_docker_registry_url/$SHORT/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
            docker push $K8S_CLUSTER_docker_registry_url/$SHORT/$CIRCLE_PROJECT_REPONAME:latest

  deploy:
    docker:
      - image: google/cloud-sdk:alpine
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: gcloud login
          command: |
            source /tmp/secrets
            gcloud auth activate-service-account --key-file=/tmp/cluster_secret.json
      - run:
          name: install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: connect to the cluster
          command: |
            source /tmp/secrets
            gcloud container clusters get-credentials $K8S_CLUSTER_cluster_name --project $K8S_CLUSTER_project_id --zone europe-west4
      - run:
          name: Install envsubt
          command: |
            apk update
            apk add gettext
      - run:
          name: replace strings
          command: |
            source /tmp/secrets
            if [[ ${CIRCLE_BRANCH} = "master" ]] || [[ ${CIRCLE_TAG} =~ ^[0-9]+(\.[0-9]+)*(-.*)*$ ]];
            then
              export DEPLOY_VERSION=''
              export SECRET_VERSION=prod
            else
              export DEPLOY_VERSION=-$CIRCLE_BRANCH
              echo 'export DEPLOY_VERSION="-$CIRCLE_BRANCH"' >> $BASH_ENV
              source ${BASH_ENV}
              export SECRET_VERSION=$CIRCLE_BRANCH
            fi
            envsubst < ./secrets.yml > ./secrets_var.yml && mv ./secrets_var.yml ./secrets.yml
            envsubst < ./deployment.yml > ./deployment_var.yml && mv ./deployment_var.yml ./deployment.yml
      - secret-injector/inject:
          app-name: $CIRCLE_PROJECT_REPONAME$DEPLOY_VERSION
          deploy-file: ./deployment.yml
          deploy-type: CronJob
          secret-file: secrets.yml
      - run:
          name: create kubernetes service
          command: |
            kubectl apply -f ./deployment.yml

workflows:
  test:
    jobs:
      - secret-injector/dump-secrets:
          context: 
            - es02-prod
            - shared
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - test:
          context:
            - shared
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - test-sonar:
          context: 
            - es02-prod
            - shared
          requires:
            - secret-injector/dump-secrets
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
  
  test-build-deploy:
    jobs:
      - secret-injector/dump-secrets:
          context: 
            - es02-prod
            - shared
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - test:
          context:
            - shared
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - test-sonar:
          context: 
            - es02-prod
            - shared
          requires:
            - secret-injector/dump-secrets
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - docker-build-n-push:
          context: 
            - es02-prod
            - shared
          requires:
            - secret-injector/dump-secrets
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - deploy:
          context: 
            - es02-prod
            - shared
          requires:
            - docker-build-n-push
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/