version: 2.1

orbs:
  secret-injector: bestsellerit/secret-injector@1.7.5
  cci-common: bestsellerit/cci-common@1.4.3
  google-sql-operations: bestsellerit/google-sql-operations@1.5.1

commands:
  cloud_sql_proxy_login:
    description: |
      Install Cloud SQL Proxy and open connection
    parameters:
      instance:
        description: The Cloud SQL instance to connect to
        type: string
      credential-file:
        description: Location of credential-file
        type: string
      project:
        description: Project name
        type: string
    steps:
      - run: |
          source /tmp/secrets
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O /usr/bin/./cloud_sql_proxy
          chmod +x /usr/bin/./cloud_sql_proxy
          HOST=$(gcloud sql instances describe "<< parameters.instance >>" --format="value(connectionName)" --project="<< parameters.project >>")
          cloud_sql_proxy -instances="$HOST"=tcp:5432 -credential_file="<< parameters.credential-file >>"
  install_psql:
    description: |
      Install psql client
    steps:
      - run: |
          apk update
          apk --update add postgresql-client
  init-db:
    description: |
      Initialize db using psql
    parameters:
      user:
        description: User name
        type: string
      pass:
        description: Password for user
        type: string
      database:
        description: Name of DB
        type: string
      init-file:
        description: File to use for initialising table
        type: string
    steps:
      - run: |
          export PGPASSWORD="<< parameters.pass >>"
          psql "host=127.0.0.1 sslmode=disable dbname="<< parameters.database >>" user="<< parameters.user >>" -f "<< parameters.init-file >>""

jobs:
  init-db:
    description: |
      Connects to database using cloud sql proxy and creates tabel using psql
    executor: cci-common/cloudsdk_image
    parameters:
      instance:
        description: The Cloud SQL instance to connect to
        type: string
      credential-file:
        description: Location of credential-file
        type: string
      project:
        description: Project name
        type: string
      user:
        description: User name
        type: string
      pass:
        description: Password for user
        type: string
      database:
        description: Name of DB
        type: string
      init-file:
        description: File to use for initialising table
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: gcloud login
          command: |
            gcloud components install beta --quiet
            cat /tmp/cloudrun_admin | jq -r .private_key_data | base64 -d > cloudrun-admin.json
            gcloud auth activate-service-account --key-file=./cloudrun-admin.json
      - cloud_sql_proxy_login:
          instance: "<< parameters.instance >>"
          credential-file: "<< parameters.credential-file >>"
          project: "<< parameters.project >>"
      - install_psql
      - init-db:
          user: "<< parameters.user >>"
          pass: "<< parameters.pass >>"
          database: "<< parameters.database >>"
          init-file: "<< parameters.init-file >>"

workflows:
  test:
    jobs:
      - secret-injector/dump-secrets-yaml:
          secret-file: ci-secrets.yaml
          context:
            - es02-prod
            - shared
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - cci-common/go_test_unit:
          context:
            - shared
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - cci-common/go_test_sonar:
          context:
            - es02-prod
            - shared
          requires:
            - secret-injector/dump-secrets-yaml
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - cci-common/build_n_push_docker:
          dry_run: true
          requires:
            - secret-injector/dump-secrets-yaml
          context:
            - es02-prod
            - shared
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
      - cci-common/terraform_plan:
          path: ./terraform
          args: '-var tag=1.0.0'
          lock: false
          context:
            - es02-prod
            - shared
          requires:
            - secret-injector/dump-secrets-yaml
          filters:
            tags:
              ignore: /^[0-9]+(\.[0-9]+)*(-.*)*$/
          pre-steps:
            - attach_workspace:
                at: /tmp
            - run:
                command: |
                  cat /tmp/cloudrun_admin | jq -r .private_key_data | base64 -d > /tmp/cloudrun-admin.json

  deploy:
    jobs:
      - secret-injector/dump-secrets-yaml:
          secret-file: ci-secrets.yaml
          context:
            - es02-prod
            - shared
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - cci-common/build_n_push_docker:
          tag: ${CIRCLE_TAG}
          repo: public-docker
          context:
            - es02-prod
            - shared
          requires:
            - secret-injector/dump-secrets-yaml
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - cci-common/terraform_plan:
          path: ./terraform
          args: '-var tag=${CIRCLE_TAG}'
          context:
            - es02-prod
            - shared
          requires:
            - cci-common/build_n_push_docker
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
          pre-steps:
            - attach_workspace:
                at: /tmp
            - run:
                command: |
                  cat /tmp/cloudrun_admin | jq -r .private_key_data | base64 -d > /tmp/cloudrun-admin.json
            - persist_to_workspace:
                root: /tmp
                paths:
                  - cloudrun-admin.json
      - cci-common/terraform_apply:
          path: ./terraform
          context:
            - es02-prod
            - shared
          requires:
            - cci-common/terraform_plan
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/
      - init-db:
          instance: $instance
          database: $db_name
          project: dependabot-pub-prod-586e
          user: $username
          pass: $password
          credential-file: /tmp/cloudrun-admin.json
          init-file: ./init.sql
          context:
            - es02-prod
            - shared
          requires:
            - cci-common/terraform_apply
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(-.*)*$/
            branches:
              ignore: /.*/